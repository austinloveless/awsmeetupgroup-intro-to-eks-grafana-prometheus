apiVersion: v1
kind: Namespace
metadata:
  name: app
  labels:
    name: app
########
# APP_1
########
---
apiVersion: v1
kind: Service
metadata:
  name: client-service
  namespace: app
spec:
  selector:
    app: client
  ports:
    - name: client
      port: 8080
      targetPort: 3001
      nodePort: 30001
  type: NodePort

---
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: client-rs
  namespace: app
spec:
  replicas: 3
  selector:
    matchLabels:
      app: client
  template:
    metadata:
      labels:
        app: client
    spec:
      containers:
        - name: client
          image: austinloveless/client:latest
          env:
            - name: SVC
              value: server-service
            - name: NAMESPACE
              value: app
          ports:
            - containerPort: 3001
########
# APP_2
########
---
apiVersion: v1
kind: Service
metadata:
  name: server-service
  namespace: app
spec:
  selector:
    app: server
  ports:
    - name: server
      port: 80
      targetPort: 3002
      nodePort: 30002
  type: NodePort

---
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: server-rs
  namespace: app
spec:
  replicas: 3
  selector:
    matchLabels:
      app: server
  template:
    metadata:
      labels:
        app: server
    spec:
      containers:
        - name: server
          image: austinloveless/server:latest
          ports:
            - containerPort: 3002
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: client-ingress
  namespace: app
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: instance
    alb.ingress.kubernetes.io/group.name: app-ingress-group
    alb.ingress.kubernetes.io/group.order: '1'
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 8080}]'
spec:
  rules:
    - http:
        paths:
          - path: /*
            backend:
              serviceName: client-service
              servicePort: 8080

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: server-ingress
  namespace: app
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: instance
    alb.ingress.kubernetes.io/group.name: app-ingress-group
    alb.ingress.kubernetes.io/group.order: '2'
spec:
  rules:
    - http:
        paths:
          - path: /*
            backend:
              serviceName: server-service
              servicePort: 80
# ANOTHER WAY TO DO THIS ^
# apiVersion: extensions/v1beta1
# kind: Ingress
# metadata:
#   name: ingress-resource
#   annotations:
#     kubernetes.io/ingress.class: nginx
#     nginx.ingress.kubernetes.io/rewrite-target: /$2
#     nginx.ingress.kubernetes.io/ssl-redirect: "false"
# spec:
#   rules:
#     - http:
#         paths:
#           - path: /ping(/|$)(.*)
#             backend:
#               serviceName: ping-service
#               servicePort: 8080
#           - path: /data(/|$)(.*)
#             backend:
#               serviceName: data-service
#               servicePort: 8080
#           - path: /admin(/|$)(.*)
#             backend:
#               serviceName: admin-service
#               servicePort: 8080
